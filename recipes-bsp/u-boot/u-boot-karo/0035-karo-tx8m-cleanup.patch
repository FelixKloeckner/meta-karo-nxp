From 0759bd6c843161ff249460121635f00bfd187634 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lothar=20Wa=C3=9Fmann?= <LW@KARO-electronics.de>
Date: Thu, 28 Nov 2019 16:10:11 +0100
Subject: [PATCH 35/39] karo: tx8m: cleanup

---
 board/karo/tx8m/tx8mm.c | 34 ++++++++++---------------
 board/karo/tx8m/tx8mn.c | 67 ++++++++++++++++++++++++-------------------------
 include/configs/tx8m.h  | 11 +++++---
 3 files changed, 53 insertions(+), 59 deletions(-)

diff --git a/board/karo/tx8m/tx8mm.c b/board/karo/tx8m/tx8mm.c
index 950be8b..a7864be 100644
--- a/board/karo/tx8m/tx8mm.c
+++ b/board/karo/tx8m/tx8mm.c
@@ -180,8 +180,9 @@ int board_mmc_init(bd_t *bis)
 		cfg->cfg.sdhc_clk = mxc_get_clock(cfg->clk);
 		imx_iomux_v3_setup_multiple_pads(cfg->pads, cfg->num_pads);
 
-		debug("%s@%d: Initialising MMC dev %zu @ %08llx clock=%u\n", __func__, __LINE__,
-		      i, cfg->cfg.esdhc_base, cfg->cfg.sdhc_clk);
+		debug("%s@%d: Initialising MMC dev %zu @ %08llx clock=%u\n",
+		      __func__, __LINE__, i,
+		      cfg->cfg.esdhc_base, cfg->cfg.sdhc_clk);
 		ret = fsl_esdhc_initialize(bis, &cfg->cfg);
 		if (ret) {
 			printf("Failed to initialize MMC%zu: %d\n", i, ret);
@@ -462,20 +463,12 @@ static inline void tx8m_led_init(void)
 
 int checkboard(void)
 {
-#if defined(CONFIG_KARO_TX8MM_1610) || defined(CONFIG_KARO_TX8MN)
-	if (is_imx8mm())
-		printf("Board: Ka-Ro TX8M-1610\n");
-	else if (is_imx8mn())
-		printf("Board: Ka-Ro TX8M-ND00\n");
-	else
-		printf("Board: <unsupported processor type>\n");
+#if defined(CONFIG_KARO_TX8MM_1610)
+	printf("Board: Ka-Ro TX8M-1610\n");
 #elif defined(CONFIG_KARO_TX8MM_1620)
-		printf("Board: Ka-Ro TX8M-1620\n");
+	printf("Board: Ka-Ro TX8M-1620\n");
 #elif defined(CONFIG_KARO_QS8M)
-	if (is_imx8mm())
-		printf("Board: Ka-Ro QS8M-MQ00\n");
-	else
-		printf("Board: Ka-Ro QS8M-ND00\n");
+	printf("Board: Ka-Ro QS8M-MQ00\n");
 #else
 #error Unsupported module variant
 #endif
@@ -599,24 +592,23 @@ void board_quiesce_devices(void)
 #ifdef CONFIG_VIDEO
 
 #ifdef CONFIG_KARO_TX8MM_1620
-#define TX8M_DSI83_I2C_BUS	0
+#define TX8M_DSI83_I2C_BUS		0
 #else
-#define TX8M_DSI83_I2C_BUS	1
+#define TX8M_DSI83_I2C_BUS		1
 #endif
-
-#define DSI83_SLAVE_ADDR	0x2c
+#define DSI83_SLAVE_ADDR		0x2c
 
 #define DISPLAY_MIX_SFT_RSTN_CSR	0x00
 #define DISPLAY_MIX_CLK_EN_CSR		0x04
 
-   /* 'DISP_MIX_SFT_RSTN_CSR' bit fields */
+/* 'DISP_MIX_SFT_RSTN_CSR' bit fields */
 #define BUS_RSTN_BLK_SYNC_SFT_EN	BIT(6)
 
-   /* 'DISP_MIX_CLK_EN_CSR' bit fields */
+/* 'DISP_MIX_CLK_EN_CSR' bit fields */
 #define LCDIF_PIXEL_CLK_SFT_EN		BIT(7)
 #define LCDIF_APB_CLK_SFT_EN		BIT(6)
 
-#define DSI_DDR_MODE 0
+#define DSI_DDR_MODE			0
 
 static const struct sec_mipi_dsim_plat_data imx8mm_mipi_dsim_plat_data = {
 	.version	= 0x1060200,
diff --git a/board/karo/tx8m/tx8mn.c b/board/karo/tx8m/tx8mn.c
index 59f94cd..b0a0eab 100644
--- a/board/karo/tx8m/tx8mn.c
+++ b/board/karo/tx8m/tx8mn.c
@@ -160,7 +160,6 @@ int board_mmc_init(bd_t *bis)
 	 * mmc1                    USDHC2
 	 * mmc2                    USDHC3
 	 */
-printf("%s@%d: \n", __func__, __LINE__);
 
 	for (size_t i = 0; i < CONFIG_SYS_FSL_USDHC_NUM; i++) {
 		struct mmc *mmc;
@@ -211,7 +210,6 @@ printf("%s@%d: \n", __func__, __LINE__);
 #ifdef CONFIG_USB
 int board_usb_init(int index, enum usb_init_type init)
 {
-printf("%s@%d: \n", __func__, __LINE__);
 	imx8m_usb_power(index, true);
 	return 0;
 }
@@ -319,8 +317,6 @@ static inline int tx8mn_setup_fec(void)
 
 int dram_init(void)
 {
-	printf("%s@%d: \n", __func__, __LINE__);
-
 	/* rom_pointer[1] contains the size of RAM occupied by TEE */
 	if (rom_pointer[1])
 		gd->ram_size = PHYS_SDRAM_SIZE -
@@ -333,7 +329,6 @@ int dram_init(void)
 
 int board_fix_fdt(void *blob)
 {
-	printf("%s@%d: \n", __func__, __LINE__);
 	return 0;
 }
 
@@ -446,7 +441,6 @@ static void tx8m_led_init(void)
 {
 	int ret;
 
-	printf("%s@%d: \n", __func__, __LINE__);
 	ret = led_get_by_label("Heartbeat", &leddev);
 	if (ret) {
 		printf("Failed to find LED device: %d\n", ret);
@@ -469,10 +463,10 @@ static inline void tx8m_led_init(void)
 
 int checkboard(void)
 {
-#if defined(CONFIG_KARO_QS8M)
-	printf("Board: Ka-Ro QS8M-ND00\n");
-#elif defined(CONFIG_KARO_TX8MN)
+#if defined(CONFIG_KARO_TX8MN)
 	printf("Board: Ka-Ro TX8M-ND00\n");
+#elif defined(CONFIG_KARO_QS8M)
+	printf("Board: Ka-Ro QS8M-ND00\n");
 #else
 #error Unsupported module variant
 #endif
@@ -522,7 +516,6 @@ int board_init(void)
 	int ret;
 	struct gpio_desc reset_out;
 
-	printf("%s@%d: \n", __func__, __LINE__);
 	tx8mn_setup_fec();
 
 	//tx8mn_i2c_init();
@@ -562,7 +555,6 @@ int board_late_init(void)
 	u16 wrsr = readw(&wdog->wrsr);
 	const char *fdt_file = env_get("fdt_file");
 
-	printf("%s@%d: \n", __func__, __LINE__);
 	karo_env_cleanup();
 	if (srsr & 0x10 && !(wrsr & WRSR_SFTW)) {
 		printf("Watchog reset detected; reboot required!\n");
@@ -578,6 +570,10 @@ int board_late_init(void)
 			printf("Failed to load FDT from '%s': %d\n",
 			       fdt_file, ret);
 	}
+	if (CONFIG_IS_ENABLED(FASTBOOT) && is_usb_boot()) {
+		env_set("bootdelay", "0");
+		env_set("bootcmd", "fastboot");
+	}
 	clear_ctrlc();
 	return 0;
 }
@@ -592,6 +588,25 @@ void board_quiesce_devices(void)
 }
 
 #ifdef CONFIG_VIDEO
+
+#define TX8M_DSI83_I2C_BUS		1
+#define DSI83_SLAVE_ADDR		0x2c
+
+#define DISPLAY_MIX_SFT_RSTN_CSR	0x00
+#define DISPLAY_MIX_CLK_EN_CSR		0x04
+
+/* 'DISP_MIX_SFT_RSTN_CSR' bit fields */
+#define BUS_RSTN_BLK_SYNC_SFT_EN	BIT(8)
+#define LCDIF_APB_CLK_RSTN		BIT(5)
+#define LCDIF_PIXEL_CLK_RSTN		BIT(4)
+
+/* 'DISP_MIX_CLK_EN_CSR' bit fields */
+#define BUS_BLK_CLK_SFT_EN		BIT(8)
+#define LCDIF_APB_CLK_SFT_EN		BIT(5)
+#define LCDIF_PIXEL_CLK_SFT_EN		BIT(4)
+
+#define DSI_DDR_MODE			0
+
 static const struct sec_mipi_dsim_plat_data imx8mn_mipi_dsim_plat_data = {
 	.version	= 0x1060200,
 	.max_data_lanes = 4,
@@ -600,8 +615,6 @@ static const struct sec_mipi_dsim_plat_data imx8mn_mipi_dsim_plat_data = {
 	.gpr_base = CSI_BASE_ADDR + 0x8000,
 };
 
-#define DSI_DDR_MODE 0
-
 struct mipi_dsi_client_dev dsi83_dev = {
 	.channel = 0,
 	.lanes = 4,
@@ -610,19 +623,6 @@ struct mipi_dsi_client_dev dsi83_dev = {
 	.name = "DSI83",
 };
 
-#define DISPLAY_MIX_SFT_RSTN_CSR	0x00
-#define DISPLAY_MIX_CLK_EN_CSR		0x04
-
-/* 'DISP_MIX_SFT_RSTN_CSR' bit fields */
-#define BUS_RSTN_BLK_SYNC_SFT_EN	BIT(8)
-#define LCDIF_APB_CLK_RSTN		BIT(5)
-#define LCDIF_PIXEL_CLK_RSTN		BIT(4)
-
-/* 'DISP_MIX_CLK_EN_CSR' bit fields */
-#define BUS_BLK_CLK_SFT_EN		BIT(8)
-#define LCDIF_APB_CLK_SFT_EN		BIT(5)
-#define LCDIF_PIXEL_CLK_SFT_EN		BIT(4)
-
 static void disp_mix_bus_rstn_reset(ulong gpr_base, bool reset)
 {
 	if (!reset)
@@ -662,7 +662,7 @@ static void disp_mix_lcdif_clks_enable(ulong gpr_base, bool enable)
 #define VSYNC_LEN	1
 #define VREFRESH	60
 
-#define BPP	24
+#define BPP		24
 #define SYNC_DELAY	64
 #define HTOTAL		(HSYNC_LEN + H_BACK_PORCH + LINE_LENGTH + H_FRONT_PORCH)
 #define VTOTAL		(VSYNC_LEN + V_BACK_PORCH + VERT_SIZE + V_FRONT_PORCH)
@@ -689,7 +689,7 @@ static struct dsi83_data {
 	{ 0x0b, 0x00, 0x03, },
 	{ 0x0b, (DSI_CLK_DIV - 1) << 3, 0x7c, },
 	{ 0x18, 0x60, 0xe0, }, // DE_NEG HS_NEG VS_NEG
-	{ 0x18, 0x08, 0x9, }, // CHA_24BPP_MODE CHA24BPP_FORMAT1
+	{ 0x18, 0x08, 0x0a, }, // CHA_24BPP_MODE CHA24BPP_FORMAT1
 	{ 0x20, LINE_LENGTH % 256, },
 	{ 0x21, LINE_LENGTH / 256, },
 	{ 0x24, VERT_SIZE % 256, },
@@ -710,8 +710,6 @@ static struct dsi83_data {
 	{ 0xe5, 0xfd, 0xfd, }, // clear error status
 };
 
-#define DSI83_SLAVE_ADDR	0x2c
-
 static int dsi83_init(void)
 {
 	int ret;
@@ -724,7 +722,7 @@ static int dsi83_init(void)
 	debug("LVDS clock: %u.%03uMHz lvds_clk_range=%u\n",
 	      LVDS_CLK / 1000000, LVDS_CLK / 1000 % 1000, LVDS_CLK_DIV);
 
-	ret = uclass_get_device_by_seq(UCLASS_I2C, 1, &dev);
+	ret = uclass_get_device_by_seq(UCLASS_I2C, TX8M_DSI83_I2C_BUS, &dev);
 	if (ret) {
 		printf("%s: Failed to find I2C bus device: %d\n",
 		       __func__, ret);
@@ -775,7 +773,8 @@ static void tx8m_backlight_enable(void)
 	if (ret == 0) {
 		ret = dm_gpio_request(&backlight_control, "BACKLIGHT_CONTROL");
 		if (ret == 0) {
-			dm_gpio_set_dir_flags(&backlight_control, GPIOD_IS_OUT);
+			dm_gpio_set_dir_flags(&backlight_control,
+					      GPIOD_IS_OUT);
 			dm_gpio_set_value(&backlight_control, 1);
 		} else {
 			printf("Failed to request BACKLIGHT_CONTROL GPIO: %d\n",
@@ -855,8 +854,8 @@ int board_video_skip(void)
 	const char *panel = env_get("panel");
 	size_t i;
 
-	printf("%s@%d: baseboard='%s' panel='%s'\n", __func__, __LINE__,
-	       baseboard, panel);
+	debug("%s@%d: baseboard='%s' panel='%s'\n", __func__, __LINE__,
+	      baseboard, panel);
 
 	if (had_ctrlc()) {
 		printf("<CTRL-C> detected; disabling display\n");
diff --git a/include/configs/tx8m.h b/include/configs/tx8m.h
index 2e46a23..59c4f13 100644
--- a/include/configs/tx8m.h
+++ b/include/configs/tx8m.h
@@ -90,6 +90,7 @@
 	"bootcmd=fastboot 0\0"						\
 	"bootdelay=-1\0"						\
 	"boot_mode=mmc\0"						\
+	"bootm_cmd=booti ${loadaddr} ${initrd_addr} ${fdt_addr}\0"	\
 	"emmc_boot_ack=1\0"						\
 	"emmc_boot_part=1\0"						\
 	"emmc_dev=0\0"							\
@@ -100,13 +101,13 @@
 	"fdt_addr=" FDTADDR_STR "\0"					\
 	"fdt_file=" CONFIG_DEFAULT_FDT_FILE "\0"			\
 	"fdt_high=63000000\0"						\
+	"initrd_addr=-\0"						\
 	"mmcdev=0\0"							\
 	"mmcpart=1\0"
 #else
 #define CONFIG_EXTRA_ENV_SETTINGS					\
 	"append_bootargs=clk_ignore_unused debug\0"			\
 	"baseboard=mipi-mb\0"						\
-	"board=imx8mm-tx8m-1610\0"					\
 	"boot_mode=mmc\0"						\
 	"bootargs_mmc=run default_bootargs;"				\
 	" setenv bootargs ${bootargs} root=PARTUUID=${uuid_rootfs}"	\
@@ -153,12 +154,14 @@
 
 #define CONFIG_ENV_OVERWRITE
 #if defined(CONFIG_ENV_IS_IN_MMC)
-#define CONFIG_ENV_OFFSET		(2048 * 512 - CONFIG_ENV_SIZE)
+#define CONFIG_ENV_OFFSET		(2 * SZ_1M - CONFIG_ENV_SIZE)
+#define CONFIG_SYS_MMC_ENV_DEV		0
+#define CONFIG_SYS_MMC_ENV_PART		1
+#elif defined(CONFIG_ENV_IS_IN_FAT)
 #else
 #error "No supported Environment location defined"
 #endif
 #define CONFIG_ENV_SIZE			0x1000
-#define CONFIG_SYS_MMC_ENV_DEV		0
 
 /* Size of malloc() pool */
 #define CONFIG_SYS_MALLOC_LEN		((CONFIG_ENV_SIZE + SZ_2K + SZ_16K) * SZ_1K)
@@ -172,7 +175,7 @@
 #elif defined(CONFIG_KARO_TX8MN)
 #define PHYS_SDRAM_SIZE			SZ_512M
 #elif defined(CONFIG_KARO_QS8M)
-#define PHYS_SDRAM_SIZE			SZ_512M
+#define PHYS_SDRAM_SIZE			SZ_1G
 #else
 #error Unsupported Board type
 #endif
-- 
2.7.4

